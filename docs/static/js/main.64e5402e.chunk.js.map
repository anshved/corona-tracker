{"version":3,"sources":["components/Cards/Cards.module.css","components/Cards/Cards.jsx","api/index.js","components/Chart/Chart.jsx","components/CountryPicker/CountryPicker.jsx","App.js","index.js","App.module.css","components/Chart/Chart.module.css","components/CountryPicker/CountryPicker.module.css"],"names":["module","exports","Cards","data","confirmed","recovered","deaths","lastUpdate","className","styles","container","Grid","spacing","justify","item","component","Card","xs","md","cx","card","infected","CardContent","Typography","color","gutterBottom","variant","start","end","value","duration","separator","Date","toLocaleString","url","fetchData","country","a","changeableUrl","axios","get","console","log","fetchDailyData","map","date","reportDate","total","fetchCountries","countries","name","Chart","useState","dailyData","setDailyData","useEffect","fetchAPI","lineChart","labels","datasets","label","borderColor","fill","backgroundColor","barChart","options","legend","display","title","text","CountryPicker","handleCountryChange","fetchedCountries","setFetchedCountries","FormControl","formControl","NativeSelect","defaultValue","onChange","e","target","i","key","App","state","fetchedData","setState","this","font","link","href","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.64e5402e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__2xjOd\",\"card\":\"Cards_card__3RxTI\",\"infected\":\"Cards_infected__RxBzX\",\"recovered\":\"Cards_recovered__2Z_O9\",\"deaths\":\"Cards_deaths__3o1FH\"};","import React from 'react';\r\nimport { Card, CardContent, Typography, Grid } from '@material-ui/core';\r\nimport CountUp from 'react-countup';\r\nimport cx from 'classnames';\r\n\r\nimport styles from './Cards.module.css';\r\n\r\nconst Cards = ({data: {confirmed, recovered, deaths, lastUpdate}}) => {\r\n    // console.log(confirmed);\r\nif(!confirmed){\r\n    return 'Loading...';\r\n}\r\n    return (\r\n        <div className={styles.container}>\r\n            <Grid container spacing = {3} justify = \"center\">\r\n                <Grid item component = {Card} xs={12} md={3} className={cx(styles.card , styles.infected)}>\r\n                    <CardContent>\r\n                        <Typography color=\"textSecondary\" gutterBottom>Infected</Typography>\r\n                        <Typography variant=\"h5\">\r\n                            <CountUp start = {0} end = {confirmed.value} duration = {3} separator = \",\" />\r\n                        </Typography>\r\n                        <Typography color=\"textSecondary\">{new Date(lastUpdate).toLocaleString('en-US')}</Typography>\r\n                        <Typography variant=\"body2\">Number of Active cases of Covid-19</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n                <Grid item component = {Card} xs={12} md={3} className={cx(styles.card , styles.recovered)}>\r\n                    <CardContent>\r\n                        <Typography color=\"textSecondary\" gutterBottom>Recovered</Typography>\r\n                        <Typography variant=\"h5\">\r\n                            <CountUp start = {0} end = {recovered.value} duration = {3} separator = \",\" />\r\n                        </Typography>\r\n                        <Typography color=\"textSecondary\">{new Date(lastUpdate).toLocaleString('en-US')}</Typography>                        <Typography variant=\"body2\">Number of Recovered cases of Covid-19</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n                <Grid item component = {Card} xs={12} md={3} className={cx(styles.card , styles.deaths)}>\r\n                    <CardContent>\r\n                        <Typography color=\"textSecondary\" gutterBottom>Deaths</Typography>\r\n                        <Typography variant=\"h5\">\r\n                            <CountUp start = {0} end = {deaths.value} duration = {3} separator = \",\" />\r\n                        </Typography>\r\n                        <Typography color=\"textSecondary\">{new Date(lastUpdate).toLocaleString('en-US')}</Typography>                        <Typography variant=\"body2\">Number of Deaths caused by Covid-19</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Cards;","import axios from 'axios';\r\n\r\nconst url = 'https://covid19.mathdro.id/api';\r\n\r\nexport const fetchData = async (country) =>{\r\n    let changeableUrl = url;\r\n\r\n    if(country) {\r\n        changeableUrl = `${url}/countries/${country}`;\r\n    }\r\n    try {\r\n        const { data: {confirmed, recovered, deaths, lastUpdate} } = await axios.get(changeableUrl);\r\n\r\n       return {confirmed, recovered, deaths, lastUpdate};\r\n       \r\n    } catch (error) {\r\n        console.log(error)\r\n    }\r\n}\r\n\r\nexport const fetchDailyData = async () => {\r\n    try {\r\n      const { data } = await axios.get(`${url}/daily`);\r\n  \r\n      return data.map(({ confirmed, deaths, reportDate: date }) => ({ confirmed: confirmed.total, deaths: deaths.total, date }));\r\n    } catch (error) {\r\n      return error;\r\n    }\r\n  };\r\n\r\nexport const fetchCountries = async () => {\r\n    try {\r\n      const { data: { countries } } = await axios.get(`${url}/countries`);\r\n  \r\n      return countries.map((country) => country.name);\r\n\r\n\r\n    } catch (error) {\r\n      return error;\r\n    }\r\n  };","import React, {useState, useEffect} from 'react';\r\nimport { Line, Bar } from \"react-chartjs-2\";\r\n\r\nimport {fetchDailyData} from '../../api'\r\nimport styles from './Chart.module.css'\r\n\r\nconst Chart = ({ data: { confirmed, recovered, deaths }, country}) => {\r\n\r\n    const [dailyData, setDailyData] = useState([]);\r\n    useEffect(() => {\r\n        const fetchAPI = async() => {\r\n           setDailyData(await fetchDailyData());\r\n        }\r\n        \r\n        fetchAPI();\r\n    }, []);\r\n    const lineChart = (\r\n\r\n        dailyData ? (\r\n        <Line \r\n        data = {{\r\n            labels: dailyData.map(({ date }) => date),\r\n            datasets: [{\r\n                data: dailyData.map(({confirmed})=> confirmed),\r\n                label: 'Infected',\r\n                borderColor: '#3333ff',\r\n                fill: true,\r\n            },{\r\n                data: dailyData.map(({deaths})=> deaths),\r\n                label: 'Deaths',\r\n                borderColor: 'red',\r\n                backgroundColor: 'rgba(255, 0, 0, 0.5)',\r\n                fill: true,\r\n            }],\r\n        }}\r\n        />) : null\r\n    );\r\n    \r\n    const barChart = (\r\n        confirmed\r\n        ? (\r\n            <Bar\r\n            data = {{\r\n                labels: ['Infected', 'Recovered', 'Deaths'],\r\n                datasets: [{\r\n                    label: 'People',\r\n                    backgroundColor: ['rgba(0, 0, 255, 0.5)','rgba(0, 255, 0, 0.5)','rgba(255, 0, 0, 0.5)'],\r\n                    data:[confirmed.value, recovered.value, deaths.value],\r\n                }],\r\n                \r\n            }}\r\n            options = {{\r\n                legend: {display: false},\r\n                title: {display: true, text:`Current state in ${country}`},\r\n            }}\r\n            />\r\n        ) : null\r\n    )\r\n\r\n    return (\r\n        <div className={styles.container}>\r\n            {country ? barChart : lineChart }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Chart;","import React , {useState, useEffect} from 'react';\r\nimport { NativeSelect, FormControl } from \"@material-ui/core\";\r\n\r\nimport styles from './CountryPicker.module.css';\r\nimport { fetchCountries } from '../../api'\r\n\r\nconst CountryPicker = ({handleCountryChange}) => {\r\n    const [fetchedCountries, setFetchedCountries] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const fetchAPI = async () => {\r\n            setFetchedCountries(await fetchCountries());\r\n        }\r\n        fetchAPI();\r\n    }, [setFetchedCountries]);\r\n\r\n    return (\r\n        <FormControl className={styles.formControl}>\r\n            <NativeSelect defaultValue=\"\" onChange={(e) => handleCountryChange(e.target.value)}>\r\n                <option value=\"global\">Global</option>\r\n                {fetchedCountries.map((country,i) => <option key={i} value={country}>{country}</option>)}\r\n            </NativeSelect>\r\n        </FormControl>\r\n    )\r\n}\r\n\r\nexport default CountryPicker;","import React from 'react';\r\n\r\nimport { Cards, Chart, CountryPicker } from \"./components\";\r\nimport styles from './App.module.css'\r\nimport { fetchData } from './api'\r\n\r\nclass App extends React.Component{\r\n\r\n    state = {\r\n        data: {},\r\n        country: '',\r\n    }\r\n\r\n    async componentDidMount (){\r\n        const fetchedData = await fetchData();\r\n        this.setState({data: fetchedData})\r\n    }\r\n\r\n    handleCountryChange = async (country) => {\r\n        const fetchedData = await fetchData(country);\r\n        this.setState({data: fetchedData, country: country})\r\n    }\r\n\r\n    render(){\r\n        const {data, country} = this.state;\r\n\r\n        return(\r\n            <div className={styles.container}>\r\n                <h1 className={styles.font}>GLOBAL COVID-19 TRACKER BY <a className={styles.link} target=\"_blank\" href=\"https://anshved.github.io/\">ANSH VED</a></h1>\r\n                <Cards data={data}/>\r\n                <CountryPicker handleCountryChange={this.handleCountryChange}/>\r\n                <Chart data={data} country={country}/>\r\n                <p>Developed by <a className={styles.link} target=\"_blank\" href=\"https://anshved.github.io/\">Ansh Ved</a></p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './App';\r\n\r\nReactDOM.render(<App/>, document.getElementById('root'));","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__3TRN4\",\"font\":\"App_font__3DIRR\",\"link\":\"App_link__3VNAF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__1v-UK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__1N85z\"};"],"sourceRoot":""}